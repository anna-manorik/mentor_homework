const WebSocket = require("ws");

// –°—Ç–≤–æ—Ä—é—î–º–æ WebSocket-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 8080
const wss = new WebSocket.Server({ port: 8080 });

wss.on("connection", (ws) => {
  console.log("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è!");

  // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É –ø—ñ—Å–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  ws.send(JSON.stringify({ message: "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ!" }));

  // –û–±—Ä–æ–±–∫–∞ –≤—Ö—ñ–¥–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
  ws.on("message", (data) => {
    console.log("üì© –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", data);

    // –†–æ–∑—Å–∏–ª–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—Å—ñ–º –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–º –∫–ª—ñ—î–Ω—Ç–∞–º
    wss.clients.forEach((client) => {
      if (client.readyState === WebSocket.OPEN) {
        client.send(data);
      }
    });
  });

  // –û–±—Ä–æ–±–∫–∞ —Ä–æ–∑'—î–¥–Ω–∞–Ω–Ω—è
  ws.on("close", () => {
    console.log("‚õî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è");
  });
});
